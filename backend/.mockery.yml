# ------------------------------------------------------------------------------
# Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
# ------------------------------------------------------------------------------

template: testify
template-data:
  unroll-variadic: true
packages:
  github.com/asgardeo/thunder/internal/system/database/client:
    config:
      all: true
      dir: tests/mocks/database/clientmock
      structname: '{{.InterfaceName}}Mock'
      pkgname: clientmock
      filename: "{{.InterfaceName}}_mock.go"

  github.com/asgardeo/thunder/internal/system/database/provider:
    config:
      all: true
      dir: tests/mocks/database/providermock
      structname: '{{.InterfaceName}}Mock'
      pkgname: providermock
      filename: "{{.InterfaceName}}_mock.go"
  
  github.com/asgardeo/thunder/internal/system/database/model:
    config:
      all: true
      dir: tests/mocks/database/modelmock
      structname: '{{.InterfaceName}}Mock'
      pkgname: modelmock
      filename: "{{.InterfaceName}}_mock.go"

  github.com/asgardeo/thunder/internal/system/healthcheck/service:
    config:
      all: true
      dir: tests/mocks/healthcheck/servicemock
      structname: '{{.InterfaceName}}Mock'
      pkgname: servicemock
      filename: "{{.InterfaceName}}_mock.go"
  
  github.com/asgardeo/thunder/internal/system/healthcheck/provider:
    config:
      all: true
      dir: tests/mocks/healthcheck/providermock
      structname: '{{.InterfaceName}}Mock'
      pkgname: providermock
      filename: "{{.InterfaceName}}_mock.go"
  
  # Uncomment to generate mocks in the cache package.
  # github.com/asgardeo/thunder/internal/system/cache:
  #   config:
  #     all: true
  #     dir: internal/system/cache
  #     structname: '{{.InterfaceName}}Mock'
  #     pkgname: cache
  #     filename: "{{.InterfaceName}}_mock_test.go"

  github.com/asgardeo/thunder/internal/system/cache:
    config:
      all: true
      dir: tests/mocks/cachemock
      structname: '{{.InterfaceName}}Mock'
      pkgname: cachemock
      filename: "{{.InterfaceName}}_mock.go"

  github.com/asgardeo/thunder/internal/cert:
    config:
      all: true
      dir: tests/mocks/certmock
      structname: '{{.InterfaceName}}Mock'
      pkgname: certmock
      filename: "{{.InterfaceName}}_mock.go"

  github.com/asgardeo/thunder/internal/system/jwt:
    config:
      all: true
      dir: tests/mocks/jwtmock
      structname: '{{.InterfaceName}}Mock'
      pkgname: jwtmock
      filename: "{{.InterfaceName}}_mock.go"

  github.com/asgardeo/thunder/internal/oauth/jwks:
    config:
      all: true
      dir: tests/mocks/oauth/jwksmock
      structname: '{{.InterfaceName}}Mock'
      pkgname: jwksmock
      filename: "{{.InterfaceName}}_mock.go"

  github.com/asgardeo/thunder/internal/oauth/scope/provider:
    config:
      all: true
      dir: tests/mocks/oauth/scope/providermock
      structname: '{{.InterfaceName}}Mock'
      pkgname: providermock
      filename: "{{.InterfaceName}}_mock.go"

  github.com/asgardeo/thunder/internal/oauth/scope/validator:
    config:
      all: true
      dir: tests/mocks/oauth/scope/validatormock
      structname: '{{.InterfaceName}}Mock'
      pkgname: validatormock
      filename: "{{.InterfaceName}}_mock.go"

  github.com/asgardeo/thunder/internal/oauth/session/store:
    config:
      all: true
      dir: tests/mocks/oauth/session/storemock
      structname: '{{.InterfaceName}}Mock'
      pkgname: storemock
      filename: "{{.InterfaceName}}_mock.go"

  github.com/asgardeo/thunder/internal/oauth/oauth2/authz:
    config:
      all: true
      dir: tests/mocks/oauth/oauth2/authzmock
      structname: '{{.InterfaceName}}Mock'
      pkgname: authzmock
      filename: "{{.InterfaceName}}_mock.go"

  github.com/asgardeo/thunder/internal/oauth/oauth2/authz/store:
    config:
      all: true
      dir: tests/mocks/oauth/oauth2/authz/storemock
      structname: '{{.InterfaceName}}Mock'
      pkgname: storemock
      filename: "{{.InterfaceName}}_mock.go"

  github.com/asgardeo/thunder/internal/oauth/oauth2/granthandlers:
    config:
      all: true
      dir: tests/mocks/oauth/oauth2/granthandlersmock
      structname: '{{.InterfaceName}}Mock'
      pkgname: granthandlersmock
      filename: "{{.InterfaceName}}_mock.go"

  github.com/asgardeo/thunder/internal/oauth/oauth2/token:
    config:
      all: true
      dir: tests/mocks/oauth/oauth2/tokenmock
      structname: '{{.InterfaceName}}Mock'
      pkgname: tokenmock
      filename: "{{.InterfaceName}}_mock.go"

  github.com/asgardeo/thunder/internal/oauth/oauth2/introspect:
    config:
      all: true
      dir: tests/mocks/oauth/oauth2/introspectmock
      structname: '{{.InterfaceName}}Mock'
      pkgname: introspectmock
      filename: "{{.InterfaceName}}_mock.go"

  github.com/asgardeo/thunder/internal/user:
    config:
      all: true
      dir: tests/mocks/usermock
      structname: '{{.InterfaceName}}Mock'
      pkgname: usermock
      filename: "{{.InterfaceName}}_mock.go"

  github.com/asgardeo/thunder/internal/authn:
    config:
      all: true
      dir: tests/mocks/authn/authnmock
      structname: '{{.InterfaceName}}Mock'
      pkgname: authnmock
      filename: "{{.InterfaceName}}_mock.go"

  github.com/asgardeo/thunder/internal/authn/credentials:
    config:
      all: true
      dir: tests/mocks/authn/credentialsmock
      structname: '{{.InterfaceName}}Mock'
      pkgname: credentialsmock
      filename: "{{.InterfaceName}}_mock.go"

  github.com/asgardeo/thunder/internal/authn/otp:
    config:
      all: true
      dir: tests/mocks/authn/otpmock
      structname: '{{.InterfaceName}}Mock'
      pkgname: otpmock
      filename: "{{.InterfaceName}}_mock.go"

  github.com/asgardeo/thunder/internal/authn/oauth:
    config:
      all: true
      dir: tests/mocks/authn/oauthmock
      structname: '{{.InterfaceName}}Mock'
      pkgname: oauthmock
      filename: "{{.InterfaceName}}_mock.go"

  github.com/asgardeo/thunder/internal/authn/oidc:
    config:
      all: true
      dir: tests/mocks/authn/oidcmock
      structname: '{{.InterfaceName}}Mock'
      pkgname: oidcmock
      filename: "{{.InterfaceName}}_mock.go"

  github.com/asgardeo/thunder/internal/authn/google:
    config:
      all: true
      dir: tests/mocks/authn/googlemock
      structname: '{{.InterfaceName}}Mock'
      pkgname: googlemock
      filename: "{{.InterfaceName}}_mock.go"

  github.com/asgardeo/thunder/internal/authn/github:
    config:
      all: true
      dir: tests/mocks/authn/githubmock
      structname: '{{.InterfaceName}}Mock'
      pkgname: githubmock
      filename: "{{.InterfaceName}}_mock.go"

  github.com/asgardeo/thunder/internal/idp:
    config:
      all: true
      dir: tests/mocks/idp/idpmock
      structname: '{{.InterfaceName}}Mock'
      pkgname: idpmock
      filename: "{{.InterfaceName}}_mock.go"

  github.com/asgardeo/thunder/internal/notification:
    config:
      all: true
      dir: tests/mocks/notification/notificationmock
      structname: '{{.InterfaceName}}Mock'
      pkgname: notificationmock
      filename: "{{.InterfaceName}}_mock.go"

  github.com/asgardeo/thunder/internal/system/http:
    config:
      all: true
      dir: tests/mocks/httpmock
      structname: '{{.InterfaceName}}Mock'
      pkgname: httpmock
      filename: "{{.InterfaceName}}_mock.go"
