// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify

package providermock

import (
	mock "github.com/stretchr/testify/mock"
)

// NewDBProviderCloserMock creates a new instance of DBProviderCloserMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDBProviderCloserMock(t interface {
	mock.TestingT
	Cleanup(func())
}) *DBProviderCloserMock {
	mock := &DBProviderCloserMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// DBProviderCloserMock is an autogenerated mock type for the DBProviderCloser type
type DBProviderCloserMock struct {
	mock.Mock
}

type DBProviderCloserMock_Expecter struct {
	mock *mock.Mock
}

func (_m *DBProviderCloserMock) EXPECT() *DBProviderCloserMock_Expecter {
	return &DBProviderCloserMock_Expecter{mock: &_m.Mock}
}

// Close provides a mock function for the type DBProviderCloserMock
func (_mock *DBProviderCloserMock) Close() error {
	ret := _mock.Called()

	if len(ret) == 0 {
		panic("no return value specified for Close")
	}

	var r0 error
	if returnFunc, ok := ret.Get(0).(func() error); ok {
		r0 = returnFunc()
	} else {
		r0 = ret.Error(0)
	}
	return r0
}

// DBProviderCloserMock_Close_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Close'
type DBProviderCloserMock_Close_Call struct {
	*mock.Call
}

// Close is a helper method to define mock.On call
func (_e *DBProviderCloserMock_Expecter) Close() *DBProviderCloserMock_Close_Call {
	return &DBProviderCloserMock_Close_Call{Call: _e.mock.On("Close")}
}

func (_c *DBProviderCloserMock_Close_Call) Run(run func()) *DBProviderCloserMock_Close_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *DBProviderCloserMock_Close_Call) Return(err error) *DBProviderCloserMock_Close_Call {
	_c.Call.Return(err)
	return _c
}

func (_c *DBProviderCloserMock_Close_Call) RunAndReturn(run func() error) *DBProviderCloserMock_Close_Call {
	_c.Call.Return(run)
	return _c
}
