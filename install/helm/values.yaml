# Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.

deployment:
  replicaCount: 2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  securityContext:
    readOnlyRootFilesystem: true # This must be false if sqlite is used as the database
    enableRunAsUser: true
    runAsUser: 802
    seccompProfile:
      enabled: false
      type: "RuntimeDefault"
  # Pod termination grace period. K8s API server waits this period after pre stop hook and sending TERM signal
  terminationGracePeriodSeconds: 10
  image:
    # -- Container image registry host name
    registry: "ghcr.io/asgardeo"
    # -- Container image repository name
    repository: "thunder"
    # -- Container image digest
    digest: ""
    # -- Container image tag. Either "tag" or "digest" should be defined
    tag: "0.7.0"
    pullPolicy: "Always"
  startupProbe:
    initialDelaySeconds: 1
    periodSeconds: 2
    failureThreshold: 30
  livenessProbe:
    periodSeconds: 10
  readinessProbe:
    initialDelaySeconds: 1
    periodSeconds: 10
  container:
    port: 8090
  resources:
    limits:
      cpu: 1.5
      memory: 512Mi
    requests:
      cpu: 1
      memory: 256Mi

hpa:
  enabled: true
  maxReplicas: 10
  averageUtilizationCPU: 65
  averageUtilizationMemory: 75

pdb:
  minAvailable: "50%"

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "thunder-service-account"
  create: true

service:
  port: 8090

ingress:
  className: "nginx"
  commonAnnotations: &commonAnnotations
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/session-cookie-conditional-samesite-none: "true"
    nginx.ingress.kubernetes.io/session-cookie-hash: sha1
    nginx.ingress.kubernetes.io/session-cookie-name: paf
    nginx.ingress.kubernetes.io/session-cookie-path: /
    nginx.ingress.kubernetes.io/session-cookie-samesite: None
  customAnnotations: &customAnnotations
    {}
  combinedAnnotations:
    !!merge <<: *commonAnnotations
    !!merge <<: *customAnnotations
  hostname: thunder.local
  paths:
    - path: /
      pathType: Prefix
  tlsSecretsName: "thunder-tls"

# Thunder specific configurations
configuration:
  # Server configuration
  server:
    hostname: "0.0.0.0"
    port: 8090

  # Gate client configuration
  gateClient:
    hostname: "0.0.0.0"
    port: 9090
    scheme: "https"
    loginPath: "/login"
    errorPath: "/error"

  # Security configuration
  security:
    certFile: "repository/resources/security/server.cert"
    keyFile: "repository/resources/security/server.key"

  # Database configuration
  database:
    identity:
      # WARNING: Use sqlite only if you are running a single pod.
      type: "postgres" # postgres or sqlite
      # Below two parameters are only required for sqlite
      sqlitePath: "repository/database/thunderdb.db" # Only required for sqlite
      sqliteOptions: "_journal_mode=WAL&_busy_timeout=5000" # Only required for sqlite
      # Below parameters are only required for Postgres
      name: "thunderdb" 
      host: "localhost" 
      port: "5432" 
      username: "asgthunder"
      password: "asgthunder"
      sslmode: "require"
      max_open_conns: 500
      max_idle_conns: 100
      conn_max_lifetime: 3600
    # Runtime database configuration
    runtime:
      # WARNING: Use sqlite only if you are running a single pod.
      type: "postgres" # postgres or sqlite
      # Below two parameters are only required for sqlite
      sqlitePath: "repository/database/runtimedb.db" # Only required for sqlite
      sqliteOptions: "_journal_mode=WAL&_busy_timeout=5000" # Only required for sqlite
      # Below parameters are only required for Postgres
      name: "runtimedb" 
      host: "localhost" 
      port: "5432" 
      username: "asgthunder"
      password: "asgthunder" 
      sslmode: "require"
      max_open_conns: 500
      max_idle_conns: 100
      conn_max_lifetime: 3600 

  # Cache configuration
  cache:
    disabled: false
    type: "inmemory"
    size: 1000
    ttl: 3600
    evictionPolicy: "LRU"
    cleanupInterval: 300

  # Token Configuration
  jwt:
    issuer: "thunder"
    validityPeriod: 3600

  # OAuth configuration
  oauth:
    refreshToken:
      renewOnGrant: false
      validityPeriod: 86400

  # Flow configuration
  flow:
    graphDirectory: "repository/resources/graphs/"
    authn:
      defaultFlow: "auth_flow_config_basic"

  # CORS configuration
  cors:
    allowedOrigins:
      - "https://localhost:3000"
      - "https://localhost:9001"
      - "https://localhost:9090"
